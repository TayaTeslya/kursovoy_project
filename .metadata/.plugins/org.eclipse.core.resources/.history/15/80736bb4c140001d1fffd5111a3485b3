package kursa4_console;
import java.util.Scanner;

public class App {
	
	public static void menu() {
		
		Scanner scanner = new Scanner(System.in);
		String m = "0";
		
		while (m != "3") {
			System.out.println("------------------------------------");
			System.out.println("Меню:");
			System.out.println("------------------------------------");
			System.out.println("1 - Решить СЛУ методом Гаусса");
			System.out.println("2 - Решить СЛУ методом квадратных корней");
			System.out.println("3 - Выйти");
			System.out.println("------------------------------------");
			m = scanner.nextLine();
		
			switch (m) {
			case "1": 
				method("methodGauss");
				break;
			case "2": 
				method("methodSquareRoots");
				break;
			case "3": 
				System.out.println("До свидания!");
				break;
			default:
				System.out.println("Пожалуйста, введите нужный вам пункт");
			}
			System.out.println("\n");
		}
		
	}

	public static void methodGauss(SystemOfEquations systemOfEquations) {
		
			System.out.println("Метод Гаусса: " + "\n");
			
	}
	
	public static void methodSquareRoots(SystemOfEquations systemOfEquations) {
		
		System.out.println("Метод квадратных корней: " + "\n");
		
		// Проверка на симметричность матриц
		for (int i = 0; i < systemOfEquations.getX().length; i++) {
			if (systemOfEquations.getX()[i][systemOfEquations.getX().length - 1 - i] != 
					systemOfEquations.getX()[systemOfEquations.getX().length - 1 - i][i]) {
				return;
			}
		}
		
		// Нахождение определителя матрицы 
		double det;
		if (systemOfEquations.getX().length == 2) { // 2х2
			det = systemOfEquations.getX()[0][0] * systemOfEquations.getX()[1][1] - 
					systemOfEquations.getX()[0][1] * systemOfEquations.getX()[1][0];
		}
		else { // высшие порядки (3 и более)
			// Приводим к верхнетреугольному виду методом Гаусса
			double[][] trilangularMatrix = triangularMatrixByGaussMethod(systemOfEquations);
			for (int i = 0; i < trilangularMatrix.length; i++) {
				for (int j = 0; j < trilangularMatrix.length; j++) {
					System.out.print(trilangularMatrix[i][j] + " ");
				}
				System.out.println();
			}
			// Определитель треугольной матрицы равен произведению элементов главной диагонали
			
		}
		
		double[][] G, Gt = null;
		G.clone(systemOfEquations.getX());
		for (int i = 0; i < systemOfEquations.getX().length; i++) {
			for (int j = 0; j < systemOfEquations.getX().length; j++) {
				if (j > i) {
					G[i][j] = 0;
					
				} 
				else {
					G[i][j] = systemOfEquations.getX()[i][j];
				}
			}
		}
		
	}
	
	public static double[][] triangularMatrixByGaussMethod(SystemOfEquations systemOfEquations) {
		double[][] trilangularMatrix = {{0, 1}};
		
		return trilangularMatrix;
	}
		
	
	public static void method(String method) {
		
		Scanner scanner = new Scanner(System.in);
		SystemOfEquations systemOfEquations = inputEquations();

		// вывод системы уравнений
		System.out.println("Полученная система линейных уравнений: ");
		for (int i = 0; i < systemOfEquations.getX().length; i++) {
			for (int j = 0; j < systemOfEquations.getX().length; j++) {
				System.out.print(systemOfEquations.getX()[i][j] + "x" + j);
				if (j + 1 == systemOfEquations.getX().length) {
					System.out.print(" = ");
					break;
				}
				System.out.print(" + ");
			}
			System.out.println(systemOfEquations.getB()[i]);
		}
		
		if (method == "methodGauss") {
			methodGauss(systemOfEquations);
		}
		else {
			methodSquareRoots(systemOfEquations);
		}
		
		String m = "";
		while (m == "") {
			System.out.print("\n" + "Введите любой символ для завершения: ");
			m = scanner.nextLine();
		}
		System.out.println("\n\n\n\n\n");
		
	}
	
	public static SystemOfEquations inputEquations() {
		
		Scanner scanner = new Scanner(System.in);
		
		// кол-во уравнений и неизвестных
		int n = 0;
		while (n < 2) {
			System.out.print("Введите кол-во уравнений и неизвестных (больше 1): ");
			try {
				n = Integer.valueOf(scanner.nextLine());
			} catch (Exception e) { }
		}
		
		double[][] x = new double[n][n];
		double[] b = new double[n];
		
		// ввод коэффициентов при неизвестных
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				System.out.print("Введите коэффициент x" + j + " " + i + " уравнения: ");
				x[i][j] = scanner.nextDouble();
			}
			System.out.print("Введите свободный член уравнения (после =): ");
			b[i] = scanner.nextDouble();
		}
		
		return new SystemOfEquations(x, b);
				
	}
	
	public static void main(String[] args) {
		
		menu();
		
	}

}
